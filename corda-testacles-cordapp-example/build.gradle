
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

project.afterEvaluate {
    project.tasks.withType(Test).each {it.dependsOn(":deployNodes")}
}

configurations {
    all {
        resolutionStrategy{
            eachDependency { DependencyResolveDetails details ->
                // Force corda_release_version
                def exclusions = ['corda-finance-contracts']
                if (details.requested.group == "net.corda" && !exclusions.contains(details.requested.name)) {
                    details.useTarget group: corda_release_group, name: details.requested.name, version: corda_release_version
                }
                // Force dependencies to use the same version of as Kotlin as we.
                if (details.requested.group == "org.jetbrains.kotlin") {
                    details.useTarget group: details.requested.group, name: details.requested.name, version: kotlin_version
                }
                // Force other versions
                if (details.requested.group == "com.fasterxml.jackson.core") {
                    details.useTarget group: details.requested.group, name: details.requested.name, version: jackson_version
                }
                if (details.requested.group == "com.fasterxml.jackson.dataformat") {
                    details.useTarget group: details.requested.group, name: details.requested.name, version: jackson_version
                }
                if (details.requested.group == "com.fasterxml.jackson.datatype") {
                    details.useTarget group: details.requested.group, name: details.requested.name, version: jackson_version
                }
                if (details.requested.group == "io.netty" && details.requested.name.startsWith("netty")
                        && !details.requested.name.startsWith("netty-tcnative-boringssl-static")) {
                    details.useTarget group: details.requested.group, name: details.requested.name, version: netty_version
                }
            }
        }
    }
}

cordapp {
    targetPlatformVersion 7
    minimumPlatformVersion 7
    contract {
        name "Corbeans Yo! Cordapp contract"
        vendor "Manos Batsis"
        versionId 1
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion corda_platform_version.toInteger()
    }
}

dependencies {
    // Use Partiture for Corda flows etc.
    cordaCompile "com.github.manosbatsis.partiture:partiture:$partiture_version"
    // Corda deps
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    testCompile(project(":corda-testacles-nodedriver"))
    testCompile(project(":corda-testacles-testcontainers"))
    //compile("com.github.manosbatsis.corda.rpc.poolboy:corda-rpc-poolboy:$poolboy_version")

    // Postgres container and driver
    testImplementation("org.postgresql:postgresql:42.2.18")

    //testImplementation("org.testcontainers:postgresql:$testcontainers_version")
    // Corda Node Driver etc. for tests
    testImplementation ("$corda_release_group:corda-node-driver:$corda_release_version")

    testImplementation("org.springframework.boot:spring-boot-starter:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    testImplementation("org.springframework.boot:spring-boot-starter-validation:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    testImplementation("org.springframework.boot:spring-boot-starter-web:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    testImplementation("org.springframework.boot:spring-boot-starter-actuator:$spring_boot_version"){
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    testImplementation("com.github.manosbatsis.corbeans:corbeans-spring-boot-starter:$corbeans_version")
    testImplementation "org.springframework:spring-test:$spring_version"
    testImplementation("org.springframework.boot:spring-boot-starter-test:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
}
